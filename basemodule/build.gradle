apply plugin: 'com.android.library'


def cfg = rootProject.ext.configuration
def libs = rootProject.ext.libraries

android {
    compileSdkVersion cfg.compileVersion
//    buildToolsVersion cfg.buildToolsVersion


    defaultConfig {
//        applicationId "com.kbq.component.basemodule"
        minSdkVersion cfg.minSdk
        targetSdkVersion cfg.targetSdk
        versionCode cfg.versionCode
        versionName cfg.versionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

//        ARouter 需要配置
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion '27.1.1'
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    api "com.android.support:support-v4:${libs.supportVersion}"
    api "com.android.support:design:${libs.supportVersion}"
    api "com.android.support:appcompat-v7:${libs.supportVersion}"
//    api 'com.android.support:appcompat-v7:25.3.0'
//    testImplementation 'junit:junit:4.12'
//    androidTestImplementation 'com.android.support.test:runner:1.0.2'
//    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    api "com.android.support.constraint:constraint-layout:${libs.constraint_layout}"

    //EventBus (https://github.com/greenrobot/EventBus)
    implementation "org.greenrobot:eventbus:${libs.eventbus}"
    //ARouter (https://github.com/alibaba/ARouter)
    api "com.alibaba:arouter-api:${libs.arouter_api}"
    annotationProcessor "com.alibaba:arouter-compiler:${libs.arouter_compiler}"
    //工具类集 (https://github.com/Blankj/AndroidUtilCode)
    api "com.blankj:utilcode:${libs.utilcode}"
    //swipebacklayout (https://github.com/ikew0ng/SwipeBackLayout)
    api "me.imid.swipebacklayout.lib:library:${libs.swipeback_layout}"
    //Gson (https://github.com/google/gson)
    implementation "com.google.code.gson:gson:${libs.gson}"

}
